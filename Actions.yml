openapi: 3.1.0
info:
  title: Habitica Proxy API
  description: OpenAPI for interacting with Habitica via a proxy.
  version: v1.0.0
servers:
  - url: https://habitica-proxy-misty-sun-5caa.jeffreyfazal.workers.dev/
security:
  - XAuthKey: []  # Global security applied to all paths

paths:
  /tasks/user:
    get:
      operationId: getUserTasks
      summary: Get a user's tasks
      description: Retrieve a list of tasks for the authenticated user.
      parameters:
        - name: type
          in: query
          description: Filter tasks by type.
          required: false
          schema:
            type: string
            enum: [habits, dailies, todos, rewards, completedTodos]
      responses:
        '200':
          description: A list of tasks.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '401':
          description: Unauthorized.

    post:
      operationId: createUserTask
      summary: Create a new task
      description: Create a new task for the user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreate'
      responses:
        '201':
          description: Task created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Invalid request.
        '401':
          description: Unauthorized.

  /tasks/{taskId}:
    put:
      operationId: updateUserTask
      summary: Update a task
      description: Update an existing task for the user.
      parameters:
        - name: taskId
          in: path
          required: true
          description: The ID of the task to update.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUpdate'
      responses:
        '200':
          description: Task updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Invalid request.
        '401':
          description: Unauthorized.
        '404':
          description: Task not found.

    delete:
      operationId: deleteUserTask
      summary: Delete a task
      description: Delete a task belonging to the user.
      parameters:
        - name: taskId
          in: path
          required: true
          description: The ID of the task to delete.
          schema:
            type: string
      responses:
        '200':
          description: Task deleted successfully.
        '401':
          description: Unauthorized.
        '404':
          description: Task not found.

components:
  securitySchemes:
    XAuthKey:
      type: apiKey
      in: header
      name: X-Auth-Key
      description: API key for authentication.

  schemas:
    Task:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        type:
          type: string
          enum: [habit, daily, todo, reward]

    TaskCreate:
      type: object
      required:
        - text
        - type
      properties:
        text:
          type: string
        type:
          type: string
          enum: [habit, daily, todo, reward]
        notes:
          type: string
        date:
          type: string
          format: date
          description: Due date (only for type "todo").

    TaskUpdate:
      type: object
      properties:
        text:
          type: string
        type:
          type: string
          enum: [habit, daily, todo, reward]
        notes:
          type: string
        date:
          type: string
          format: date
          description: Due date (only for type "todo").